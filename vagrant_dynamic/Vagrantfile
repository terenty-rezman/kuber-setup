# -*- mode: ruby -*-
# vi: set ft=ruby :

# clone kubespray and install ansible for its requirements
$script = <<-SCRIPT
echo installing pip
sudo apt update
yes | sudo apt install pip

echo cloning kubespray...
cd 
git clone https://github.com/kubernetes-sigs/kubespray.git

echo installing ansible form kubespray requirements...
cd kubespray
pip install -r requirements.txt

echo configuring env for ansible to work...
export PATH=/home/vagrant/.local/bin:$PATH
mkdir -p /home/vagrant/.ansible/roles

echo installing additional modules for ansible
cd /home/vagrant/.ansible/roles
ansible-galaxy install kwoodson.yedit

SCRIPT

# add new nodes to add more nodes to the cluster
nodes = [
    {
        name: 'control1',
        groups: ['kube_control_plane', 'etcd']
    },
    {
        name: 'worker1',
        groups: ['kube_node']
    },
    {
        name: 'worker2',
        groups: ['kube_node']
    }
]

# generate ip for each node
nodes.each_with_index do |node, idx|
  ip = "192.168.177." + (2 + idx).to_s
  node[:ip] = ip
end


Vagrant.configure("2") do |config|
  nodes.each_with_index do |node, idx|
    vm_name = node[:name]
    ip = node[:ip]

    config.vm.define vm_name do |n|
      config.vm.provider "libvirt"

      n.vm.box = "generic/ubuntu2004"
      n.disksize.size = "20GB"

      n.vm.hostname = vm_name
      n.vm.network "private_network", ip: ip, virtualbox__intnet: "kuber_internal"

      # additional safety
      n.vm.synced_folder ".", "/vagrant", SharedFoldersEnableSymlinksCreate: false

      n.vm.provider :virtualbox do |vb, override|
        vb.name = vm_name
        vb.memory = 2048
        vb.cpus = 2
        vb.gui = false
        vb.linked_clone = true
        vb.customize ["modifyvm", :id, "--vram", "8"] # ubuntu defaults to 256 MB which is a waste of precious RAM
        vb.customize ["modifyvm", :id, "--audio", "none"]
      end

      n.vm.provider :libvirt do |lv|
        lv.cpu_mode = "host-model"
        lv.memory = 2048
        lv.cpus = 2
        lv.default_prefix = 'kubespray'
        # Fix kernel panic on fedora 28
        if $os == "fedora"
          lv.cpu_mode = "host-passthrough"
        end
      end

    end
  end

  config.vm.define "master" do |master|
    config.vm.provider "libvirt"

    master.vm.box = "generic/ubuntu2004"
    master.disksize.size = "20GB"

    master.vm.hostname = "master"
    master.vm.network "private_network", ip: "192.168.177.1", virtualbox__intnet: "kuber_internal"

    master.vm.provider :virtualbox do |vb, override|
      vb.name = "master"
      vb.memory = 2048
      vb.cpus = 2
      vb.gui = false
      vb.linked_clone = true
      vb.customize ["modifyvm", :id, "--vram", "8"] # ubuntu defaults to 256 MB which is a waste of precious RAM
      vb.customize ["modifyvm", :id, "--audio", "none"]
    end

    master.vm.provider :libvirt do |lv|
      lv.cpu_mode = "host-model"
      lv.memory = 2048
      lv.cpus = 2
      lv.default_prefix = 'kubespray'
      # Fix kernel panic on fedora 28
      if $os == "fedora"
          lv.cpu_mode = "host-passthrough"
      end
    end

    master.vm.synced_folder ".", "/vagrant", SharedFoldersEnableSymlinksCreate: false

    master.vm.provision "shell", inline: $script, privileged: false

    host_vars = {}
    # serialize to json
    host_vars["master"] = { nodes: "'#{nodes.to_json}'" }

    master.vm.provision "ansible_local" do |ansible|
      ansible.host_vars = host_vars
    
      # ansible is installed by shell script above
      ansible.install = false
      ansible.playbook = "prepare_master.yaml"
    end
  end

end
